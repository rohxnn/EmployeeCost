{"ast":null,"code":"var _jsxFileName = \"/home/tunerlabs/Documents/EmployeeCost/src/components/Setting/Setting.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Setting.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Setting({\n  totalAmount,\n  setCostPerPerson,\n  setProfitPercentage\n}) {\n  _s();\n  const [employeeNumber, setEmployeeNumber] = useState(1);\n  const [profitPercent, setProfitPercent] = useState(100);\n  handleEmployeeNumberChange = e => {\n    setEmployeeNumber(e.target.value);\n    const costPerPerson = totalAmount / employeeNumber;\n    setCostPerPerson(costPerPerson);\n  };\n  handleProfitChanges = e => {\n    setProfitPercent(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settingForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"employeeNumber\",\n      value: employeeNumber,\n      onChange: handleEmployeeNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"profitPercent\",\n      value: profitPercent,\n      onChange: handleProfitChanges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Setting, \"T88+eScl0bQv+x58NAW+kfYEtVI=\");\n_c = Setting;\nexport default Setting;\nvar _c;\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Setting","totalAmount","setCostPerPerson","setProfitPercentage","_s","employeeNumber","setEmployeeNumber","profitPercent","setProfitPercent","handleEmployeeNumberChange","e","target","value","costPerPerson","handleProfitChanges","className","children","type","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tunerlabs/Documents/EmployeeCost/src/components/Setting/Setting.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './Setting.css';\n\n\nfunction Setting({ totalAmount, setCostPerPerson, setProfitPercentage }) {\n    const [employeeNumber, setEmployeeNumber] = useState(1);\n    const [profitPercent, setProfitPercent] = useState(100);\n\n    handleEmployeeNumberChange = (e) => {\n        setEmployeeNumber(e.target.value);\n        const costPerPerson = totalAmount / employeeNumber;\n        setCostPerPerson(costPerPerson);\n    }\n\n    handleProfitChanges = (e) => {\n        setProfitPercent(e.target.value);\n\n    }\n\n    return (\n        <div className='settingForm'>\n            <input type='number' name=\"employeeNumber\" value={ employeeNumber } onChange={ handleEmployeeNumberChange } />\n            <input type='number' name='profitPercent' value={ profitPercent } onChange={ handleProfitChanges } />\n        </div>\n    );\n\n}\n\nexport default Setting;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvB,SAASC,OAAOA,CAAC;EAAEC,WAAW;EAAEC,gBAAgB;EAAEC;AAAoB,CAAC,EAAE;EAAAC,EAAA;EACrE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC;EAEvDY,0BAA0B,GAAIC,CAAC,IAAK;IAChCJ,iBAAiB,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACjC,MAAMC,aAAa,GAAGZ,WAAW,GAAGI,cAAc;IAClDH,gBAAgB,CAACW,aAAa,CAAC;EACnC,CAAC;EAEDC,mBAAmB,GAAIJ,CAAC,IAAK;IACzBF,gBAAgB,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAEpC,CAAC;EAED,oBACIb,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBjB,OAAA;MAAOkB,IAAI,EAAC,QAAQ;MAACC,IAAI,EAAC,gBAAgB;MAACN,KAAK,EAAGP,cAAgB;MAACc,QAAQ,EAAGV;IAA4B;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9GxB,OAAA;MAAOkB,IAAI,EAAC,QAAQ;MAACC,IAAI,EAAC,eAAe;MAACN,KAAK,EAAGL,aAAe;MAACY,QAAQ,EAAGL;IAAqB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpG,CAAC;AAGd;AAACnB,EAAA,CAtBQJ,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAwBhB,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}