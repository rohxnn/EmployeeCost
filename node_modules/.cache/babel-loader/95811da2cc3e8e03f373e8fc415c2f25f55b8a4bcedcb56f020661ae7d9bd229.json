{"ast":null,"code":"var _jsxFileName = \"/home/tunerlabs/Documents/EmployeeCost/src/components/Setting/Setting.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Setting.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Setting(props) {\n  _s();\n  const [employeeNumber, setEmployeeNumber] = useState(1);\n  useEffect(() => {\n    const costPerPerson = props.totalAmount / employeeNumber;\n    setCostPerPerson(costPerPerson);\n    console.log(costPerPerson);\n  }, [tprops.otalAmount, employeeNumber]);\n  const handleEmployeeNumberChange = e => {\n    setEmployeeNumber(e.target.value);\n  };\n  const handleProfitChanges = e => {\n    setProfitPercentage(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settingForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"employeeNumber\",\n      onChange: e => handleEmployeeNumberChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"profitPercent\",\n      onChange: e => handleProfitChanges(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(Setting, \"ibocF/carVrk5ZUMkAU2d03lYMQ=\");\n_c = Setting;\nexport default Setting;\nvar _c;\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Setting","props","_s","employeeNumber","setEmployeeNumber","costPerPerson","totalAmount","setCostPerPerson","console","log","tprops","otalAmount","handleEmployeeNumberChange","e","target","value","handleProfitChanges","setProfitPercentage","className","children","type","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tunerlabs/Documents/EmployeeCost/src/components/Setting/Setting.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Setting.css';\n\nfunction Setting(props) {\n    const [employeeNumber, setEmployeeNumber] = useState(1);\n\n    useEffect(() => {\n        const costPerPerson = props.totalAmount / employeeNumber;\n        setCostPerPerson(costPerPerson);\n        console.log(costPerPerson)\n    }, [tprops.otalAmount, employeeNumber]);\n\n    const handleEmployeeNumberChange = (e) => {\n        setEmployeeNumber(e.target.value);\n    }\n\n    const handleProfitChanges = (e) => {\n        setProfitPercentage(e.target.value);\n    }\n\n    return (\n        <div className='settingForm'>\n            <input type='number' name=\"employeeNumber\" onChange={(e) => handleEmployeeNumberChange(e)} />\n            <input type='number' name='profitPercent' onChange={(e) => handleProfitChanges(e)} />\n        </div>\n    );\n}\n\nexport default Setting;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACZ,MAAMS,aAAa,GAAGJ,KAAK,CAACK,WAAW,GAAGH,cAAc;IACxDI,gBAAgB,CAACF,aAAa,CAAC;IAC/BG,OAAO,CAACC,GAAG,CAACJ,aAAa,CAAC;EAC9B,CAAC,EAAE,CAACK,MAAM,CAACC,UAAU,EAAER,cAAc,CAAC,CAAC;EAEvC,MAAMS,0BAA0B,GAAIC,CAAC,IAAK;IACtCT,iBAAiB,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,mBAAmB,GAAIH,CAAC,IAAK;IAC/BI,mBAAmB,CAACJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,oBACIhB,OAAA;IAAKmB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBpB,OAAA;MAAOqB,IAAI,EAAC,QAAQ;MAACC,IAAI,EAAC,gBAAgB;MAACC,QAAQ,EAAGT,CAAC,IAAKD,0BAA0B,CAACC,CAAC;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7F3B,OAAA;MAAOqB,IAAI,EAAC,QAAQ;MAACC,IAAI,EAAC,eAAe;MAACC,QAAQ,EAAGT,CAAC,IAAKG,mBAAmB,CAACH,CAAC;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEd;AAACxB,EAAA,CAvBQF,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAyBhB,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}